## NEED CHANGE (defines the user of the nginx workers)
# user user group;

##Â THIS PARAMETERS BE SAFELY OVER RIDDEN BY YOUR DEFAULT NGINX CONF
worker_processes  2;
# error_log stderr notice;
# daemon off;
# error_log logs/error.log warn;
events {
  worker_connections 256;
}

http {
  lua_shared_dict api_keys 10m;
  lua_package_path ";;$prefix/?.lua;";
  init_by_lua 'math.randomseed(ngx.time())';
  
  upstream backend_CHANGE_ME_API_BACKEND {
    server CHANGE_ME_API_BACKEND:CHANGE_ME_PORT max_fails=5 fail_timeout=30;
  }

  upstream threescale_backend {
    server su1.3scale.net:80; #su1.3scale.net:80; #
  }

  server {
    lua_code_cache off;
    listen 80;
    ## CHANGE YOUR SERVER_NAME TO YOUR CUSTOM DOMAIN OR LEAVE IT BLANK IF ONLY HAVE ONE
    server_name CHANGE_ME_SERVER_NAME;
    underscores_in_headers on;

    location /oauth/token {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_set_header  Content-Type "application/x-www-form-urlencoded";
      set $provider_key CHANGE_ME_PROVIDER_KEY;
      content_by_lua_file '/CHANGE_ME_PATH_TO/get_token.lua';
    }

    location /_oauth/token {
      internal;
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host "CHANGE_ME_SERVER_NAME";

      proxy_pass "CHANGE_ME_OAUTH_TOKEN_ENDPOINT";
    }

    location = /_threescale/oauth_store_token {
      internal;
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host "su1.3scale.net"; #needed. backend discards other hosts
      set $provider_key CHANGE_ME_PROVIDER_KEY;
      set $service_id CHANGE_ME_SERVICE_ID;
      proxy_pass http://threescale_backend/services/$service_id/oauth_access_tokens.xml;
    }

    location /_threescale/auth {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host "su1.3scale.net" ;
      
      set $provider_key CHANGE_ME_PROVIDER_KEY;
      set $service_id CHANGE_ME_SERVICE_ID;
      proxy_ignore_client_abort on;
      proxy_pass http://threescale_backend/transactions/oauth_authorize.xml?provider_key=$provider_key&app_id=$arg_app_id&app_key=$arg_app_key;
    }

    location /_threescale/toauth_authorize {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host "su1.3scale.net" ;

      set $provider_key CHANGE_ME_PROVIDER_KEY;
      set $service_id CHANGE_ME_SERVICE_ID;
      proxy_ignore_client_abort on;
      proxy_pass http://threescale_backend/transactions/oauth_authorize.xml?provider_key=$provider_key&service_id=$service_id&access_token=$arg_access_token&$usage;
    }

    location /_threescale/oauth_report {
      internal;
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host "su1.3scale.net";
      set $provider_key CHANGE_ME_PROVIDER_KEY;
      set $service_id CHANGE_ME_SERVICE_ID;
      proxy_pass http://threescale_backend/transactions.xml?provider_key=$provider_key&service_id=$service_id&transactions[0][access_token]=$arg_access_token&$usage;
    }

    location = /threescale_authrep {
      internal;
      set $provider_key CHANGE_ME_PROVIDER_KEY;

      proxy_pass http://threescale_backend/transactions/authrep.xml?provider_key=$provider_key&service_id=$service_id&$usage&$credentials;
      proxy_set_header  Host  "su1.3scale.net";
    }

    location = /out_of_band_authrep_action {
      internal;
      proxy_pass_request_headers off;
      ##needs to be in both places, better not to have it on location / for potential security issues, req. are internal
      set $provider_key CHANGE_ME_PROVIDER_KEY;

      content_by_lua '
        if ngx.var.cached_key ~= nil then
          local res1 = ngx.location.capture("/threescale_authrep", { share_all_vars = true })
          if res1.status ~= 200 then
            local api_keys = ngx.shared.api_keys
            api_keys:delete(ngx.var.cached_key)
          end
          ngx.status = 200
          ngx.header.content_length = 0
          ngx.exit(ngx.HTTP_OK)
        else
          ngx.status = 200
          ngx.header.content_length = 0
          ngx.exit(ngx.HTTP_OK)
        end
      ';
    }

    location = /out_of_band_oauth_report_action {
      internal;
      proxy_pass_request_headers off;
      set $provider_key CHANGE_ME_PROVIDER_KEY;

      content_by_lua '
        if ngx.var.cached_key ~= nil then
          local res1 = ngx.location.capture("/_threescale/toauth_authorize?access_token="..ngx.var.access_token, { share_all_vars = true })
          if res1.status ~= 200 then
            local api_keys = ngx.shared.api_keys
            api_keys:delete(ngx.var.cached_key)
          else
            local res2 = ngx.location.capture("/_threescale/oauth_report?access_token="..ngx.var.access_token, {method = ngx.HTTP_POST, share_all_vars = true})
            ngx.status = 200
          ngx.header.content_length = 0
          ngx.exit(ngx.HTTP_OK)
          end
        else
          local res2 = ngx.location.capture("/_threescale/oauth_report?access_token="..ngx.var.access_token, {method = ngx.HTTP_POST, share_all_vars = true})
          ngx.status = 200
          ngx.header.content_length = 0
          ngx.exit(ngx.HTTP_OK)
        end
      ';
    }

    location / {
      set $provider_key null;
      set $cached_key null;
      set $credentials null;
      set $usage null;
      set $service_id CHANGE_ME_SERVICE_ID;
      set $proxy_pass null;
      set $secret_token null;
      set $access_token null;

      proxy_ignore_client_abort on;

      ## CHANGE THE PATH TO POINT TO THE RIGHT FILE ON YOUR FILESYSTEM
      access_by_lua_file /CHANGE_ME_PATH_TO/nginx.lua;

      proxy_pass $proxy_pass;
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  Host  $host;
      proxy_set_header X-3scale-proxy-secret-token $secret_token;

      post_action /out_of_band_oauth_report_action;
    }
  }
}